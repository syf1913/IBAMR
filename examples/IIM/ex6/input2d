// physical parameters
L     = 2.46            // width  of computational domain (m)
H     = 0.41            // height of computational domain (m)
RHO   = 1e3           // fluid mass density (kg/m^3)
NU    = 1e-3          // dynamic viscosity (m^2/s)
MU    = RHO*NU          // kinematic viscosity
U_BAR = 2.0             // mean flow rate (m/s)
U_MAX = 4.0             // (estimated) maximum velocity (m/s)
D     = 0.1             // cylinder diameter (m)
RE    = U_BAR*D*RHO/MU  // Reynolds number
mass_density = RHO
// grid spacing parameters
MAX_LEVELS = 3                                     // maximum number of levels in locally refined grid
REF_RATIO  = 4                                     // refinement ratio between levels
N = 24                                            // actual    number of grid cells on coarsest grid level
NFINEST = (REF_RATIO^(MAX_LEVELS - 1))*N           // effective number of grid cells on finest   grid level
DX0 = H/N                                          // mesh width on coarsest grid level
DX  = H/NFINEST                                    // mesh width on finest   grid level
MFAC = 2.0                                         // ratio of Lagrangian mesh width to Cartesian mesh width
BLOCK_ELEM_TYPE = "QUAD4"                           // type of element to use for discretization of the circular block
USE_BOUNDARY_MESH = FALSE
BEAM_MESH_FILENAME = "beam-quad-mesh.e"
BEAM_ELEM_TYPE  = "QUAD4"                          // type of element to use for discretization of the thin beam
block_elem_order = "FIRST"                        // finite element order for cylinder block
beam_elem_order = "FIRST"                         // finite element order for flexible beam
SELECTIVE_REDUCED_INTEGRATION = TRUE
PK1_DEV_QUAD_ORDER            = "THIRD"
PK1_DIL_QUAD_ORDER            = "FIRST"
viscous_jump_fe_family  = "MONOMIAL"             // CONSTANT or FIRST order MONOMIAL or FIRST order L2_LAGRANGE for the viscous jump
pressure_jump_fe_family = "MONOMIAL"             // CONSTANT or FIRST order MONOMIAL or FIRST order L2_LAGRANGE for the pressure jump
traction_fe_family      = "MONOMIAL"             // CONSTANT or FIRST order MONOMIAL or FIRST order L2_LAGRANGE for the traction
viscous_jump_fe_order   = "CONSTANT"           
pressure_jump_fe_order  = "CONSTANT"             
traction_fe_order 	    = "CONSTANT"                // Traction order needs to be equal or smaller than the viscous and pressure jumps

// solver parameters
IB_DELTA_FUNCTION      = "IB_3"
BEAM_KERNEL_FUNCTION       = "BSPLINE_3"           // the type of smoothed delta function to use for Lagrangian-Eulerian interaction
USE_PRESSURE_JUMP_CONDITIONS        = TRUE           // whether to impose pressure jumps at fluid-structure interfaces
USE_VELOCITY_JUMP_CONDITIONS        = TRUE           // whether to impose pressure jumps at fluid-structure interfaces
COMPUTE_FLUID_TRACTION = TRUE
WSS_CALC_WIDTH             = 1.05
P_CALC_WIDTH               = 1.3
USE_CONSISTENT_MASS_MATRIX = TRUE                  // whether to use a consistent or lumped mass matrix
IB_POINT_DENSITY           = 3.0                   // approximate density of IB quadrature points for Lagrangian-Eulerian interaction
SOLVER_TYPE                = "STAGGERED"           // the fluid solver to use (STAGGERED or COLLOCATED)
CFL_MAX                    = 0.6                 // maximum CFL number
DT                         = 5e-5 //1e-4 //0.5*CFL_MAX*DX/U_MAX      // maximum timestep size
START_TIME                 = 0.0e0                 // initial simulation time
END_TIME                   = 40                // final simulation time
GROW_DT                    = 2.0e0                 // growth factor for timesteps
NUM_CYCLES                 = 1                     // number of cycles of fixed-point iteration
CONVECTIVE_TS_TYPE         = "ADAMS_BASHFORTH"     // convective time stepping type
CONVECTIVE_OP_TYPE         = "STABILIZED_PPM"                 // convective differencing discretization type
CONVECTIVE_FORM            = "ADVECTIVE"           // how to compute the convective terms
NORMALIZE_PRESSURE         = FALSE                 // whether to explicitly force the pressure to have mean zero
ERROR_ON_DT_CHANGE         = FALSE                  // whether to emit an error message if the time step size changes
VORTICITY_TAGGING          = TRUE                  // whether to tag cells for refinement based on vorticity thresholds
TAG_BUFFER                 = 1                    // size of tag buffer used by grid generation algorithm
REGRID_CFL_INTERVAL        = 0.5                   // regrid whenever any material point could have moved 0.5 meshwidths since previous regrid
OUTPUT_U                   = TRUE
OUTPUT_P                   = TRUE
OUTPUT_F                   = TRUE
OUTPUT_OMEGA               = TRUE
OUTPUT_DIV_U               = TRUE
ENABLE_LOGGING             = TRUE

// collocated solver parameters
PROJECTION_METHOD_TYPE = "PRESSURE_UPDATE"
SECOND_ORDER_PRESSURE_UPDATE = TRUE
USE_NORMALIZED_PRESSURE_JUMP = FALSE

NCYCLE = 32

// model parameter
MU_S = 2.0e6
POISSON_RATIO = 0.499
NU_S = POISSON_RATIO
SHEAR_MOD = MU_S
BULK_MOD = 2.0 * SHEAR_MOD * (1.0 + POISSON_RATIO) / (3.0 - 6.0 * POISSON_RATIO)
LAMBDA_S = 2.67e6 

// penalty parameters
C1_S = 5000
P0_S = C1_S

KAPPA_S_FSI_BLOCK = 110*DX/DT^2
KAPPA_S_FSI_BEAM = 16*DX/DT^2 
ETA_FSI_BEAM = 40*DX/DT


KAPPA_S_BLOCK = 3000*DX/DT^2
KAPPA_S_SURFACE_BLOCK = 3000*DX/DT^2


BETA_S = 0.0 //001*DX/DT^2 


VelocityBcCoefs_0 {
   U_bar = U_BAR
   H = H

   acoef_function_0 = "1.0"
   acoef_function_1 = "0.0"
   acoef_function_2 = "1.0"
   acoef_function_3 = "1.0"

   bcoef_function_0 = "0.0"
   bcoef_function_1 = "1.0"
   bcoef_function_2 = "0.0"
   bcoef_function_3 = "0.0"

   gcoef_function_0 = "1.5*U_bar*X1*(H-X1)/((H/2)^2)*(t < 2.0? 0.5*(1.0-cos(0.5*pi*t)):1.0)"   
   gcoef_function_1 = "0.0"
   gcoef_function_2 = "0.0"
   gcoef_function_3 = "0.0"
}

VelocityBcCoefs_1 {
  H = H
   acoef_function_0 = "1.0"
   acoef_function_1 = "0.0"
   acoef_function_2 = "1.0"
   acoef_function_3 = "1.0"

   bcoef_function_0 = "0.0"
   bcoef_function_1 = "1.0"
   bcoef_function_2 = "0.0"
   bcoef_function_3 = "0.0"

   gcoef_function_0 = "0.0"
   gcoef_function_1 = "0.0"
   gcoef_function_2 = "0.0"
   gcoef_function_3 = "0.0"
}

IBHierarchyIntegrator {
   start_time          = START_TIME
   end_time            = END_TIME
   grow_dt             = GROW_DT
   num_cycles          = NUM_CYCLES
   regrid_cfl_interval = REGRID_CFL_INTERVAL
   dt_max              = DT
   error_on_dt_change  = ERROR_ON_DT_CHANGE
   enable_logging      = ENABLE_LOGGING
}

IIMethod{
   use_pressure_jump_conditions = USE_PRESSURE_JUMP_CONDITIONS
   use_velocity_jump_conditions = USE_VELOCITY_JUMP_CONDITIONS
   use_consistent_mass_matrix   = USE_CONSISTENT_MASS_MATRIX
   IB_point_density             = IB_POINT_DENSITY
   min_ghost_cell_width         = 6
   wss_calc_width               = WSS_CALC_WIDTH
   p_calc_width                 = P_CALC_WIDTH
   compute_fluid_traction       = COMPUTE_FLUID_TRACTION   
   exterior_calc_coef           = 1.0
}

INSCollocatedHierarchyIntegrator {
   mu                            = MU
   rho                           = RHO
   start_time                    = START_TIME
   end_time                      = END_TIME
   grow_dt                       = GROW_DT
   convective_time_stepping_type = CONVECTIVE_TS_TYPE
   convective_op_type            = CONVECTIVE_OP_TYPE
   convective_difference_form    = CONVECTIVE_FORM
   normalize_pressure            = NORMALIZE_PRESSURE
   cfl                           = CFL_MAX
   dt_max                        = DT
   using_vorticity_tagging       = VORTICITY_TAGGING
   vorticity_rel_thresh          = 0.01
   tag_buffer                    = TAG_BUFFER
   output_U                      = OUTPUT_U
   output_P                      = OUTPUT_P
   output_F                      = OUTPUT_F
   output_Omega                  = OUTPUT_OMEGA
   output_Div_U                  = OUTPUT_DIV_U
   enable_logging                = ENABLE_LOGGING
   projection_method_type        = PROJECTION_METHOD_TYPE
   use_2nd_order_pressure_update = SECOND_ORDER_PRESSURE_UPDATE
}

FEMechanicsExplicitIntegrator {
	use_consistent_mass_matrix    = USE_CONSISTENT_MASS_MATRIX
	mass_density = RHO

}


INSStaggeredHierarchyIntegrator {
   mu                            = MU
   rho                           = RHO
   start_time                    = START_TIME
   end_time                      = END_TIME
   grow_dt                       = GROW_DT
   convective_time_stepping_type = CONVECTIVE_TS_TYPE
   convective_op_type            = CONVECTIVE_OP_TYPE
   convective_difference_form    = CONVECTIVE_FORM
   normalize_pressure            = NORMALIZE_PRESSURE
   cfl                           = CFL_MAX
   dt_max                        = DT
   using_vorticity_tagging       = VORTICITY_TAGGING
   vorticity_rel_thresh          = 0.01
   tag_buffer                    = TAG_BUFFER
   output_U                      = OUTPUT_U
   output_P                      = OUTPUT_P
   output_F                      = OUTPUT_F
   output_Omega                  = OUTPUT_OMEGA
   output_Div_U                  = OUTPUT_DIV_U
   enable_logging                = ENABLE_LOGGING
}

Main {
   solver_type = SOLVER_TYPE

// log file parameters
   log_file_name               = "ILE_TH.log"
   log_all_nodes               = FALSE

// visualization dump parameters
   viz_writer                  = "VisIt","ExodusII"
   viz_dump_interval           = int(0.5/DT)
   viz_dump_dirname            = "viz_ILE_TH"
   visit_number_procs_per_file = 1

// restart dump parameters
   restart_dump_interval       = 0
   restart_dump_dirname        = "restart_ILE_TH"

// hierarchy data dump parameters
   data_dump_interval          = 1
   data_dump_dirname           = "hier_data_ILE_TH"

// timer dump parameters
   timer_dump_interval         = 1
}

CartesianGeometry {
   domain_boxes = [ (0,0),(int((L/H)*N) - 1,N - 1) ]
   x_lo = 0,0
   x_up = L,H
   periodic_dimension = 0,0
}

GriddingAlgorithm {
   max_levels = MAX_LEVELS
   ratio_to_coarser {
      level_1 = REF_RATIO,REF_RATIO
      level_2 = REF_RATIO,REF_RATIO
      level_3 = REF_RATIO,REF_RATIO
      level_4 = REF_RATIO,REF_RATIO
      level_5 = REF_RATIO,REF_RATIO
      level_6 = REF_RATIO,REF_RATIO
      level_7 = REF_RATIO,REF_RATIO
   }
   largest_patch_size {
      level_0 = 512,512  // all finer levels will use same values as level_0
   }
   smallest_patch_size {
      level_0 =   16, 16  // all finer levels will use same values as level_0
   }
   efficiency_tolerance = 0.80e0  // min % of tag cells in new patch level
   combine_efficiency   = 0.60e0  // chop box if sum of volumes of smaller boxes < efficiency * vol of large box
  allow_patches_smaller_than_minimum_size_to_prevent_overlaps = TRUE
}

StandardTagAndInitialize {
   tagging_method = "GRADIENT_DETECTOR"
}

LoadBalancer {
   bin_pack_method     = "SPATIAL"
   max_workload_factor = 1
}

TimerManager{
   print_exclusive = FALSE
   print_total     = TRUE
   print_threshold = 0.1
   timer_list      = "IBAMR::*::*","IBTK::*::*","*::*::*"
}
 
