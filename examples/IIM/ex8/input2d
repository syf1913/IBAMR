// physical parameters
RHO = 1.0                                     // gm cm^-3
RHO_S = 500 * RHO
MU  = 9.0                                     // gm cm^-1 s^-1
// grid spacing parameters
L = 14.0                           // width of computational domain
H = 12.0
MAX_LEVELS = 3                                 // number of levels in locally refined grid
REF_RATIO  = 4                                 // refinement ratio between levels
NFINEST = 256                                 // number of Cartesian cells on finest   grid level
N = NFINEST/(REF_RATIO^(MAX_LEVELS - 1))       // number of Cartesian cells on coarsest grid level
DX_FINEST = H/NFINEST                          // Cartesian grid spacing on finest level (cm)
DX = DX_FINEST
elem_order_thin = "SECOND"                          // finite element order
TUBE_ELEM_TYPE = "QUAD9" 
MFAC = 2.0
D = 1.0
H0 = 2.0
// mesh parameters
TUBE_LOWER_MESH_FILENAME  = "damped_ds_0.2_QUAD9_lower_AllSides.e"
TUBE_UPPER_MESH_FILENAME  = "damped_ds_0.2_QUAD9_upper_AllSides.e"
PK1_DEV_QUAD_ORDER        = "FIFTH"
PK1_DIL_QUAD_ORDER        = "FIRST"

// solver parameters
USE_PRESSURE_JUMP_CONDITIONS        = TRUE           // whether to impose pressure jumps at fluid-structure interfaces
USE_VELOCITY_JUMP_CONDITIONS        = TRUE           // whether to impose pressure jumps at fluid-structure interfaces
COMPUTE_FLUID_TRACTION      = TRUE
WSS_CALC_WIDTH 			    = 1.05
P_CALC_WIDTH 			    = 1.3
USE_CONSISTENT_MASS_MATRIX  = TRUE              // whether to use a consistent or lumped mass matrix
IB_POINT_DENSITY            = 4                    // approximate density of IB quadrature points for Lagrangian-Eulerian interaction
SOLVER_TYPE                 = "STAGGERED"            // the fluid solver to use (STAGGERED or COLLOCATED)
START_TIME                  = 0.0e0             // initial simulation time (s)
END_TIME                    = 4.0            // final   simulation time (s)
GROW_DT                     = 2.0e0             // growth factor for timesteps
NUM_CYCLES                  = 1                 // number of cycles of fixed-point iteration
CONVECTIVE_TS_TYPE          = "ADAMS_BASHFORTH" // convective time stepping type
CONVECTIVE_OP_TYPE          = "STABILIZED_PPM"   // convective differencing discretization type
CONVECTIVE_FORM             = "ADVECTIVE"       // how to compute the convective terms
NORMALIZE_PRESSURE          = FALSE             // whether to explicitly force the pressure to have mean zero
CFL_MAX                     = 0.6              // maximum CFL number
DT_MAX                      = 4e-5 				// time step size (s)
DT							= DT_MAX
ERROR_ON_DT_CHANGE          = TRUE      // whether to emit an error message if the time step size changes
VORTICITY_TAGGING           = TRUE          // whether to tag cells for refinement based on vorticity thresholds
TAG_BUFFER                  = 1                 // size of tag buffer used by grid generation algorithm
REGRID_CFL_INTERVAL         = 0.5               // regrid whenever any material point could have moved 0.5 meshwidths since previous regrid
OUTPUT_U                    = TRUE
OUTPUT_P                    = TRUE
OUTPUT_F                    = TRUE
OUTPUT_OMEGA                = TRUE
OUTPUT_DIV_U                = TRUE
ENABLE_LOGGING              = TRUE


USE_NORMALIZED_PRESSURE_JUMP = FALSE


// penalty parameters

BETA_S = 0.0

NU_S_LOWER = 0.3
YOUNG_M_LOWER = 9.0e8 
LAMBDA_S_LOWER = YOUNG_M_LOWER * NU_S_LOWER /(1.0 - NU_S_LOWER - 2.0 * NU_S_LOWER * NU_S_LOWER)
MU_S_LOWER = YOUNG_M_LOWER/(2*(1.0 + NU_S_LOWER))

NU_S_UPPER = 0.3
YOUNG_M_UPPER = 9.0e5 
LAMBDA_S_UPPER = YOUNG_M_UPPER * NU_S_UPPER /(1.0 - NU_S_UPPER - 2.0 * NU_S_UPPER * NU_S_UPPER)
MU_S_UPPER = YOUNG_M_UPPER/(2*(1.0 + NU_S_UPPER))



NCYCLE = 2

KAPPA_S_LINE = 2e6
ETA_S_LINE = 400

KAPPA_S_FSI_LOWER = 1e6 // 5e5 and 63 time-steps
ETA_FSI_LOWER = 2.0

KAPPA_S_FSI_UPPER = 1e6 // 5e5 and 63 time-steps
ETA_FSI_UPPER = 2.0
ETA_SURFACE = 0.0
XC1 = -4.5
XC2 = 4.5
U_MAX1 = 10.0
U_MAX2 = 10.1


BoundaryStabilization {
   stabilization_type_1 = "OUTFLOW"
   stabilization_type_0 = "INFLOW"
   width_0 = 4.0*DX
   width_1 = 4.0*DX
}

ForcingFunction {
  function_0 = "0.0"
  function_1 = "-1.0"

}



// collocated solver parameters
PROJECTION_METHOD_TYPE = "PRESSURE_UPDATE"
SECOND_ORDER_PRESSURE_UPDATE = TRUE

VelocityBcCoefs_0 {

   acoef_function_0 = "0.0" 
   acoef_function_1 = "0.0" 
   acoef_function_2 = "1.0"
   acoef_function_3 = "1.0"

   bcoef_function_0 = "1.0"
   bcoef_function_1 = "1.0" 
   bcoef_function_2 = "0.0"
   bcoef_function_3 = "0.0"

   gcoef_function_0 = "0.0"
   gcoef_function_1 = "0.0"
   gcoef_function_2 = "0.0"
   gcoef_function_3 = "0.0"
}

VelocityBcCoefs_1 {
   XC1 = XC1
   XC2 = XC2
   D = D
   U_MAX1 = U_MAX1
   U_MAX2 = U_MAX2
   acoef_function_0 = "1.0"
   acoef_function_1 = "1.0"
   acoef_function_2 = "(sqrt((X0 - XC1) * (X0 - XC1) + X1 * X1) < D/2 ? 1.0 : sqrt((X0 - XC2) * (X0 - XC2) + X1 * X1) < D/2 ? 1.0 : 0.0)"
   acoef_function_3 = "0.0"

   bcoef_function_0 = "0.0"
   bcoef_function_1 = "0.0"
   bcoef_function_2 = "(sqrt((X0 - XC1) * (X0 - XC1) + X1 * X1) < D/2 ? 0.0 : sqrt((X0 - XC2) * (X0 - XC2) + X1 * X1) < D/2 ? 0.0 : 1.0)"
   bcoef_function_3 = "1.0"

   gcoef_function_0 = "0.0"
   gcoef_function_1 = "0.0"
   gcoef_function_2 = "(sqrt((X0 - XC1) * (X0 - XC1) + X1 * X1) < D/2 ? U_MAX1*(1.0 - 4.0*((X0 - XC1)*(X0 - XC1))/(D*D)) : sqrt((X0 - XC2) * (X0 - XC2) + X1 * X1) < D/2 ? U_MAX2*(1.0 - 4.0*((X0 - XC2)*(X0 - XC2))/(D*D)) : 1.0)"
   gcoef_function_3 = "0.0"
}


IBHierarchyIntegrator {
   start_time          = START_TIME
   end_time            = END_TIME
   grow_dt             = GROW_DT
   num_cycles          = NUM_CYCLES
   regrid_cfl_interval = REGRID_CFL_INTERVAL
   dt_max              = DT_MAX
   error_on_dt_change  = ERROR_ON_DT_CHANGE
   enable_logging      = ENABLE_LOGGING
}

IIMethod {
   use_pressure_jump_conditions = USE_PRESSURE_JUMP_CONDITIONS
   use_velocity_jump_conditions = USE_VELOCITY_JUMP_CONDITIONS
   compute_fluid_traction       =  COMPUTE_FLUID_TRACTION
   use_consistent_mass_matrix   = USE_CONSISTENT_MASS_MATRIX
   IB_point_density             = IB_POINT_DENSITY
   p_calc_width                 = P_CALC_WIDTH
   wss_calc_width               = WSS_CALC_WIDTH
   exterior_calc_coef           = 0.0
   min_ghost_cell_width         = 6
}
INSStaggeredHierarchyIntegrator {
   mu                            = MU
   rho                           = RHO
   start_time                    = START_TIME
   end_time                      = END_TIME
   grow_dt                       = GROW_DT
   num_cycles                    = NUM_CYCLES
   convective_time_stepping_type = CONVECTIVE_TS_TYPE
   convective_op_type            = CONVECTIVE_OP_TYPE
   convective_difference_form    = CONVECTIVE_FORM
   normalize_pressure            = NORMALIZE_PRESSURE
   cfl                           = CFL_MAX
   dt_max                        = DT_MAX
   using_vorticity_tagging       = VORTICITY_TAGGING
   vorticity_rel_thresh          = 0.01
   tag_buffer                    = TAG_BUFFER
   output_U                      = OUTPUT_U
   output_P                      = OUTPUT_P
   output_F                      = OUTPUT_F
   output_Omega                  = OUTPUT_OMEGA
   output_Div_U                  = OUTPUT_DIV_U
   enable_logging                = ENABLE_LOGGING

   convective_op_db {
      // settings for STABILIZED_PPM convective operator
      width_0 = 4.0*DX_FINEST
      width_1 = 4.0*DX_FINEST
      width_2 = 4.0*DX_FINEST
      width_3 = 4.0*DX_FINEST
      width_4 = 4.0*DX_FINEST
      width_5 = 4.0*DX_FINEST
   }
}
FEMechanicsExplicitIntegrator{
	use_consistent_mass_matrix    = USE_CONSISTENT_MASS_MATRIX
	mass_density = RHO_S
}


Main {
   solver_type = SOLVER_TYPE

// log file parameters
   log_file_name               = "IIM2d_QUAD9.log"
   log_all_nodes               = FALSE

// visualization dump parameters
   viz_writer                  = "VisIt","ExodusII"
   viz_dump_interval           = int(0.1/DT)
   viz_dump_dirname            = "viz_IIM2d_QUAD9"
   visit_number_procs_per_file = 1

// restart dump parameters
   restart_dump_interval       = 0
   restart_dump_dirname        = "restart_IIM2d_test"

// hierarchy data dump parameters
   data_dump_interval          = 0
   data_dump_dirname           = "hier_data_IIM2d_test"

// timer dump parameters
   timer_dump_interval         = 0
}

CartesianGeometry {
   domain_boxes = [ (0,0),(int((L/H)*N) - 1,N - 1) ]
   x_lo = -L/2,0
   x_up = L/2,H
   periodic_dimension = 0,0
}

GriddingAlgorithm {
   max_levels = MAX_LEVELS
   ratio_to_coarser {
      level_1 = REF_RATIO,REF_RATIO
      level_2 = REF_RATIO,REF_RATIO
      level_3 = REF_RATIO,REF_RATIO
      level_4 = REF_RATIO,REF_RATIO
      level_5 = REF_RATIO,REF_RATIO
   }
   largest_patch_size {
      level_0 = 512,512  // all finer levels will use same values as level_0
   }
   smallest_patch_size {
      level_0 =   8,  8  // all finer levels will use same values as level_0
   }
   efficiency_tolerance = 0.85e0  // min % of tag cells in new patch level
   combine_efficiency   = 0.85e0  // chop box if sum of volumes of smaller boxes < efficiency * vol of large box

//   allow_patches_smaller_than_ghostwidth = TRUE
   allow_patches_smaller_than_minimum_size_to_prevent_overlaps = TRUE
 //  coalesce_boxes = TRUE
 //  extend_tags_to_bdry = TRUE
}

StandardTagAndInitialize {
   tagging_method = "GRADIENT_DETECTOR"
}

LoadBalancer {
   bin_pack_method     = "SPATIAL"
   max_workload_factor = 1
}

TimerManager{
   print_exclusive = FALSE
   print_total     = TRUE
   print_threshold = 0.1
   timer_list      = "IBAMR::*::*","IBTK::*::*","*::*::*"
}
